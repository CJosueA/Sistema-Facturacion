@*
    VIEW TO DISPLAY THE MOVEMENT HISTORY OF A SPECIFIC PRODUCT
    Design: A centered card presents the history in a clean and professional manner.
    UX: The queried product is highlighted to provide context. Badges are color-coded
    to quickly differentiate between entries and exits.
*@

@model IEnumerable<SistemaFacturacion.Models.Movement>

@{
    ViewData["Title"] = "Historial de Movimientos";
}

<div class="row justify-content-center">
    <div class="col-md-10 col-lg-8">

        <div class="card shadow-lg mt-4">

            <div class="card-header text-center bg-dark text-white">
                <h3 class="my-2">@ViewData["Title"]</h3>
            </div>

            <div class="card-body p-4">

                <div class="alert alert-light border text-center">
                    <h5 class="alert-heading">Producto</h5>
                    <p class="mb-0 fs-5"><strong>@ViewData["ProductNombre"]</strong></p>
                </div>

                <table class="table table-hover table-striped">
                    <thead class="table-dark">
                        <tr>
                            <th>Fecha</th>
                            <th>Tipo</th>
                            <th>Cantidad</th>
                            <th>Observación</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* Check if the Model collection contains any movements. *@
                        @if (Model.Any())
                        {
                            @* Loop through each movement in the model and create a table row (tr) for it. *@
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@(item.Date.ToString("dd/MM/yyyy"))</td>
                                    <td>
                                        @*
                                            This conditional logic displays a badge with a different color
                                            depending on the movement type. This improves UX by allowing
                                            for quick visual identification.
                                        *@
                                        @if (item.Type == "Entrada")
                                        {
                                            <span class="badge bg-success">Entrada</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Salida</span>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Observation)</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center text-muted p-4">
                                    No hay movimientos registrados para este producto.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="card-footer bg-light text-center">
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i> Volver a la Búsqueda
                </a>
            </div>
        </div>
    </div>
</div>