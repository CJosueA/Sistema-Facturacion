@*
    VIEW FOR REGISTERING A NEW INVENTORY MOVEMENT (ENTRY/EXIT)
    Design: A centered card focuses the user's attention on the current task.
    UX: Prominently displays the affected product's information to prevent errors.
    The form is clear, with descriptive labels and well-defined action buttons.
*@

@model SistemaFacturacion.Models.Movement

@{
    ViewData["Title"] = "Registrar Movimiento de Inventario";
}

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="card shadow-lg mt-4">

            <div class="card-header text-center bg-dark text-white">
                <h3 class="my-2">@ViewData["Title"]</h3>
            </div>

            <div class="card-body p-4">

                <div class="alert alert-info text-center">
                    <h5 class="alert-heading">Producto Seleccionado</h5>
                    <p class="mb-0 fs-5"><strong>@ViewBag.ProductNombre</strong></p>
                    <hr>
                    <p class="mb-0">Stock Actual: <span class="badge bg-primary rounded-pill fs-6">@ViewBag.ProductStock</span></p>
                </div>

                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <input type="hidden" asp-for="ProductId" />

                    <div class="mb-3">
                        <label asp-for="Type" class="form-label fw-bold"></label>
                        <select asp-for="Type" class="form-select">
                            <option value="">-- Seleccione un Tipo --</option>
                            <option value="Entrada">Entrada (Aumentar Stock)</option>
                            <option value="Salida">Salida (Disminuir Stock)</option>
                        </select>
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Quantity" class="form-label fw-bold"></label>
                        <input asp-for="Quantity" class="form-control" type="number" min="1" placeholder="Ej: 10" />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Observation" class="form-label fw-bold"></label>
                        <textarea asp-for="Observation" class="form-control" rows="3" placeholder="Ej: Compra a proveedor, ajuste de inventario..."></textarea>
                        <span asp-validation-for="Observation" class="text-danger"></span>
                    </div>

                    <div class="d-grid gap-2 mt-4">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-save me-2"></i> Registrar Movimiento
                        </button>
                        <a asp-controller="Movements" asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-times-circle me-2"></i> Cancelar y Volver
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}